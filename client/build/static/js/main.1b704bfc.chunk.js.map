{"version":3,"sources":["components/Navbar/navbar.js","components/Container/container.js","components/Row/row.js","utils/API.js","components/PostCard/postCard.js","pages/Home.js","pages/Profile.js","components/List/list.js","components/Podcast/podcast.js","components/SearchResults/SearchResults.js","components/Episode/episode.js","components/Image/image.js","pages/EpisodeList.js","components/Col/col.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","_ref","userSearch","podcastSearch","handleInputChange","handlePodcastSubmit","handleUserSubmit","logout","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","placeholder","value","onChange","name","autocomplete","required","onClick","google_login","buttonText","onLogoutSuccess","Container","props","children","Row","API","getPosts","userId","axios","get","getPostsOnlyByUser","getUsers","user","getPodcasts","podcast","URL","headers","X-RapidAPI-Key","then","response","catch","error","console","log","getEpisodes","podcastId","getUserDetails","id_token","params","getFollowers","getFollowing","getFavorites","handleFavoriteDelete","post","Card","photo","date","message","icon","title","description","link","likes","comments","src","href","Home","state","posts","userProfileImage","userName","podcastIcon","podcastEpisode","episodeDescription","googleUserId","_this","res","setState","data","this","container","row","length","map","PostCard_postCard","key","Component","followers","following","favorites","podcastTitle","podcastDescription","messageNoPodcast","messageNoFav","deleteFavorite","_this2","List","Podcast","thumbnail","SearchResults","show","podcasts","list","components_Podcast_podcast","Episode","episodeId","Button","Image","EpisodeList","podcastLogo","episodes","podcast_id","episode_id","image","title_original","pub_date_ms","audio_length","description_original","handleListRefresh","components_Image_image","episode","Episode_episode","listenToEpisode","episode_Id","Col","Login","responseGoogle","tokenObj","google_login_default","clientId","onSuccess","onFailure","App","users","showResults","event","_event$target","target","Object","defineProperty","checkContent","preventDefault","Navbar_navbar","SearchResults_SearchResults","react_router","exact","path","component","Profile","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b704bfc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport { GoogleLogout } from 'react-google-login';\n\n\nfunction Navbar({ userSearch, podcastSearch, handleInputChange, handlePodcastSubmit, handleUserSubmit, logout }) {\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-success\">\n      <Link className=\"navbarText navbar-brand\" to=\"/\">PodHub</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <ul className=\"navbar-nav mr-auto\">\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/profile\"\n              className={\n                window.location.pathname === \"/profile\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Profile\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/home\"\n              className={\n                window.location.pathname === \"/home\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n        </ul>\n\n        <form className=\"form-inline my-2 my-lg-0 searchUserForm\">\n          <input className=\"form-control mr-sm-2 searchUserInput\"\n            type=\"search\"\n            placeholder=\"Search for an user\"\n            aria-label=\"Search\"\n            id=\"usertInput\"\n            value={userSearch}\n            onChange={handleInputChange}\n            name=\"userSearch\"\n            autocomplete=\"off\"\n            required\n          />\n        </form>\n        <button type=\"submit\"\n          className=\"btn btn-dark btn-sm\"\n          onClick={handleUserSubmit}>\n          Search\n        </button>\n\n        <form className=\"form-inline my-2 my-lg-0 searchPodcastForm\">\n          <input className=\"form-control mr-sm-2 searchPodcastInput\"\n            type=\"search\"\n            placeholder=\"Search for a podcast\"\n            aria-label=\"Search\"\n            id=\"podcastInput\"\n            value={podcastSearch}\n            onChange={handleInputChange}\n            name=\"podcastSearch\"\n            autocomplete=\"off\"\n            required\n          />\n        </form>\n        <button type=\"submit\"\n          className=\"btn btn-dark btn-sm\"\n          onClick={handlePodcastSubmit}>\n          Search\n        </button>\n        <GoogleLogout\n          buttonText=\"Logout\"\n          onLogoutSuccess={logout}\n        >\n        </GoogleLogout>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import axios from \"axios\";\n\nexport default {\n\n    // Gets all posts for specific user\n    getPosts: function (userId) {\n        return axios.get(\"/api/getPosts\", userId);\n    },\n\n    getPostsOnlyByUser: function (userId) {\n        return axios.get(\"/api/getPostsOnlyByUser\", userId);\n    },\n\n    getUsers: function (user) {\n        return axios.get(\"api/getUsers\", user)\n    },\n\n    // Gets all episodes for a particular podcast\n    getPodcasts: function (podcast) {\n        var URL = \"https://listennotes.p.rapidapi.com/api/v1/search?sort_by_date=0&type=podcast&only_in=title&language=English&safe_mode=1&q=\" + podcast;\n\n        return axios.get(URL, { 'headers': { 'X-RapidAPI-Key': \"a063bce4f1msh0a4f44209d57a2fp1225adjsn3f80cc1cf1bb\" } })\n            .then((response) => {\n                // console.log(response);\n                return response;\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },\n\n    // Gets all episodes for a particular podcast\n    getEpisodes: function (podcastId) {\n        return axios.get(\"/api/getEpisodes\", podcastId);\n    },\n\n    getUserDetails: function (id_token) {\n        return axios.get(\"/api/users\", { params: {id_token}});\n    },\n\n    getFollowers: function (userId) {\n        return axios.get(\"/api/getFollowers\", userId);\n    },\n\n    getFollowing: function (userId) {\n        return axios.get(\"/api/getFollowing\", userId);\n    },\n\n    getFavorites: function (id) {\n        return axios.get(\"/api/favorites\", id);\n    },\n\n    handleFavoriteDelete: function (id) {\n        return axios.post(\"/api/favorites\", id);\n    },\n\n};\n","import React from \"react\";\nimport \"./postCard.css\";\n\n// function Card ({photo, name, date, message, icon, episode, link, like, comments}) \nfunction Card({ photo, name, date, message, icon, title,description, link, likes, comments }) {\n  return (\n    <div className=\"container rounded-0 border-top-0 border-left-0 border-right-0 card\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <img src={photo} />\n        </div>\n        <div className=\"col\">\n          <div className=\"row\">{name} &nbsp;|&nbsp; {date}</div>\n          <div className=\"row\">{message}</div>\n          <div className=\"row border rounded\">\n            <div className=\"col-2 p-0\">\n              <img src={icon} />\n            </div>\n            <div className=\"col p-0\">\n            <p>{title}</p>\n            <p>{description}</p>\n            <a href={link}>{link}</a>\n            </div>\n          </div>\n          <div className=\"row pb-1\">\n            <a className=\"likes\">Likes:&nbsp;{likes}&nbsp;</a>\n            <a className=\"comments\"> Comments:&nbsp;{comments}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Card;\n\n\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n//import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                id:1,\n                userProfileImage: \"<image>\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                id:2,\n                userProfileImage: \"<image>\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        user:[\n            {\n                name: \"John Smith\",\n                userProfileImage: \"<image>\",\n                googleUserId: \"1111\",\n            },\n        ],\n\n    };\n\n    componentDidMount() {\n        this.getPosts();\n    };\n\n    // Add function to call getPost function every time when something is posted or every 2 mins or so\n    \n\n    // API request to get the user's and his follower's posts\n    getPosts = () => {\n        API.getPosts(this.state.userId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    message: \"No podcast found, please post something or follow someone to see the feeds.\"\n                })\n            );\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <h4 className=\"text-center\">{this.state.message}</h4>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n//import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\nimport \"./Profile.css\";\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                id: 1,\n                userProfileImage: \"<image>\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                id: 2,\n                userProfileImage: \"<image>\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        user: [\n            {\n                name: \"John Smith\",\n                userProfileImage: \"<image>\",\n                googleUserId: \"1111\"\n            }\n        ],\n        followers: 5,\n        following: 10,\n        favorites: [\n            {\n                id: 1,\n                podcastIcon: \"<image>\",\n                podcastTitle: \"Favorite podcast 1\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            },\n            {\n                id: 2,\n                podcastIcon: \"<image>\",\n                podcastTitle: \"Favorite podcast 2\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            },\n            {\n                id: 3,\n                podcastIcon: \"<image>\",\n                podcastTitle: \"Favorite podcast 3\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            }\n        ]\n    };\n\n    componentDidMount() {\n        this.getPostsOnlyByUser();\n        this.getFavorites();\n        this.getUserDetails();\n        this.getFollowers();\n        this.getFollowing();\n    };\n\n    getPostsOnlyByUser = () => {\n        API.getPostsOnlyByUser(this.state.userId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    messageNoPodcast: \"No posts found, post something.\"\n                })\n            );\n    };\n\n    getFavorites = () => {\n        API.getFavorites(this.state.userId)\n            .then(res =>\n                this.setState({\n                    favorites: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    favorites: [],\n                    messageNoFav: \"No favorites found. Search for a podcast and add it to your favorites.\"\n                })\n            );\n    };\n\n    getUserDetails = () => {\n        API.getUserDetails(this.state.userId)\n            .then(res =>\n                this.setState({\n                    user: res.data\n                })\n            );\n    };\n\n    getFollowers = () => {\n        API.getFollowers(this.state.userId)\n            .then(res =>\n                this.setState({\n                    followers: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    followers: 0,\n                })\n            );\n    };\n\n    getFollowing = () => {\n        API.getFollowing(this.state.userId)\n            .then(res =>\n                this.setState({\n                    following: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    following: 0,\n                })\n            );\n    };\n\n    handleFavoriteDelete = id => {\n        API.deleteFavorite(id).then(res => this.getFavorites());\n    };\n\n\n    render() {\n        return (\n            <Container >\n                <div className=\"row userProfile rounded bg-light\">\n                    <div className=\"col-4\">\n                        <img src={this.state.user[0].userProfileImage} />\n                    </div>\n\n                    <div className=\"col-8\">\n                        <Row>\n                            <h2>{this.state.user[0].name}</h2>\n                        </Row>\n                        <Row>\n                            Posts:&nbsp; {this.state.posts.length} &nbsp; | &nbsp;\n                        Followers:&nbsp;{this.state.followers}&nbsp; | &nbsp;\n                        Following:&nbsp;{this.state.following}\n                        </Row>\n                    </div>\n                </div>\n\n                <div className=\"row favorites rounded\">\n                    <h4>Favorites: </h4>\n                    {this.state.favorites.length ? (\n                        <Container>\n                            {this.state.favorites.map(favorites => (\n\n                                <div className=\"row border rounded\" key={favorites.id}>\n\n                                    <div className=\"col-2 p-0\">\n\n                                        <img src={favorites.podcastIcon} />\n                                    </div>\n                                    <div className=\"col p-0\">\n                                        <p>{favorites.podcastTitle}</p>\n                                        <p>{favorites.podcastDescription}</p>\n                                        <a href={favorites.link}>{favorites.link}</a> &nbsp;\n\n                                            <button className=\"btn btn-sm mb-1 btn-light\"\n                                            onClick={() => this.handleFavoriteDelete(favorites.id)}\n                                        >\n                                            x\n                                            </button>\n\n                                    </div>\n                                </div>\n                            ))}\n                        </Container>\n                    ) : (\n                            <div className=\"col\">\n                                <h5 className=\"text-center\">&nbsp;{this.state.messageNoFav}</h5>\n                            </div>\n                        )}\n                </div>\n                <Row>\n                    <h4>Recent posts:</h4>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <div className=\"col\">\n                                <h5 className=\"text-center\">&nbsp;{this.state.messageNoPodcast}</h5>\n                            </div>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React from \"react\";\r\n\r\n// This component exports both the List and ListItem components\r\n\r\nexport const List = ({ children }) => (\r\n    <ul className=\"list-group\">\r\n      {children}\r\n    </ul>\r\n  );\r\n  \r\nexport function ListItem({ children }) {\r\n    return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport \"./podcast.css\";\r\n\r\nfunction Podcast ({ podcastId, thumbnail, title }) {\r\n    return (\r\n        <div className=\"podcast\">\r\n            <span><img className=\"podcastLogoSmall\" src={thumbnail}/></span>\r\n            <span><p className=\"podcastTitle\">{title}</p></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Podcast;","import React, { Component } from \"react\";\r\nimport List from \"../List/list\";\r\nimport Podcast from \"../Podcast/podcast\";\r\nimport Container from \"../Container/container\";\r\nimport \"./searchResults.css\";\r\n\r\n// SEARCH RESULTS COMPONENT\r\n\r\nfunction SearchResults ({ show, podcasts }) {\r\n\r\n    return (\r\n        <Container>\r\n            <div className={show}>\r\n                <List>\r\n                    {podcasts.map((podcast) =>\r\n                        <Podcast \r\n                          podcastId={podcast.podcastId}\r\n                          thumbnail={podcast.thumbnail}\r\n                          title={podcast.title}\r\n                        />\r\n                    )}\r\n                </List>\r\n            </div>\r\n        </Container>\r\n        )\r\n};\r\n\r\nexport default SearchResults;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Episode({ episodeId, name, date, length, description, Button }) {\r\n  return (\r\n\r\n    <div className=\"container rounded-0 border-0 card\">\r\n\r\n        <div className=\"col\">\r\n\r\n          {/* Name | Date */}\r\n          <div className=\"row\">{name} &nbsp;|&nbsp; {date}</div>\r\n\r\n          <div className=\"border rounded\">\r\n\r\n            {/* Episode Description */}\r\n            <span>{description}<br/></span>\r\n            <span>Length:{length}<br/></span>\r\n\r\n            {/* Listen Button */}\r\n            <Button />\r\n        </div>\r\n      </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Episode;\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./image.css\";\r\n\r\nconst Image = ({ src }) => (\r\n    <img className=\"podcastLogo\" src={src}/>\r\n);\r\n\r\nexport default Image;","import React, { Component } from \"react\";\r\nimport Container from \"../components/Container/container\";\r\nimport Row from \"../components/Row/row\";\r\nimport List from \"../components/List/list\";\r\n// import Col from \"../components/Col/col\";\r\nimport Episode from \"../components/Episode/episode\";\r\nimport Image from \"../components/Image/image\";\r\nimport API from \"../utils/API\";\r\nimport Podcast from \"../components/Podcast/podcast\";\r\n\r\n\r\nclass EpisodeList extends Component {\r\n\r\n    state = {\r\n        podcastId: 1234,\r\n        podcastLogo: \"https://picsum.photos/200/300/?random\",\r\n        episodes: [\r\n            {\r\n                podcast_id: 1,\r\n                episode_id: 1,\r\n                image: \"https://picsum.photos/200\",\r\n                thumbnail: \"\",\r\n                title_original: \"Project 3 Podcast Episode 1\",\r\n                pub_date_ms: 1488438000000,\r\n                audio_length: \"03:00\",\r\n                description_original: \"Great episode of the podcast.\",\r\n                Button: \"<button>\"\r\n            },\r\n\r\n            {\r\n                podcast_id: 2,\r\n                episode_id: 2,\r\n                image: \"https://picsum.photos/200\",\r\n                thumbnail: \"\",\r\n                title_original: \"Project 3 Podcast Episode 2\",\r\n                pub_date_ms: 1488438000000,\r\n                audio_length: \"03:00\",\r\n                description_original: \"Great episode of the podcast.\",\r\n                Button: \"<button>\"\r\n            },\r\n\r\n            {\r\n                podcast_id: 3,\r\n                episode_id: 3,\r\n                image: \"https://picsum.photos/200\",\r\n                thumbnail: \"\",\r\n                title_original: \"Project 3 Podcast Episode 3\",\r\n                pub_date_ms: 1488438000000,\r\n                audio_length: \"03:00\",\r\n                description_original: \"Great episode of the podcast.\",\r\n                Button: \"<button>\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    handleListRefresh = () => {\r\n        this.getEpisodes();\r\n    };\r\n\r\n    getEpisodes = () => {\r\n        API.getEpisodes(this.state.podcastId)\r\n            .then(res =>\r\n                this.setState({\r\n                    episodes: res.data\r\n                })\r\n            )\r\n            .catch(() =>\r\n                this.setState({\r\n                    episodes: [],\r\n                    message: \"No episodes found.\"\r\n                })\r\n            );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Episodes</h1>\r\n                <Image \r\n                    src={this.state.podcastLogo}\r\n                />\r\n                <br/>\r\n                <Row>\r\n                    {this.state.episodes.length ? (\r\n                        <Container>\r\n                            <List>\r\n                                {this.state.episodes.map(episode => (\r\n                                    <Episode\r\n                                        key={episode.podcast_id}\r\n                                        image={episode.image}\r\n                                        thumbnail={episode.thumbnail}\r\n                                        name={episode.title_original}\r\n                                        date={episode.pub_date_ms}\r\n                                        length={episode.audio_length}\r\n                                        description={episode.description_original}\r\n                                        Button={() => (\r\n                                            <button\r\n                                                onClick={() => this.listenToEpisode(episode.episode_Id)}\r\n                                                className=\"btn btn-primary btn-sm\"\r\n                                            >\r\n                                            Listen\r\n                                            </button>\r\n                                        )}\r\n                                    />\r\n                                ))}\r\n                            </List>\r\n                        </Container>\r\n                    ) : (\r\n                            <h2 className=\"text-center\">{this.state.message}</h2>\r\n                        )}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EpisodeList;","import React from \"react\";\n\nfunction Col(props) {\n  return <div className=\"col\">{props.children}</div>;\n}\n\nexport default Col;\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\nimport Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport \"./Login.css\";\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\n\n\n\nclass Login extends Component {\n\n    state = {\n        id_token: \"\"\n    };\n\n    \n\n    getUserDetails = () => {\n        API.getUserDetails(this.state.id_token)\n            .then(res =>\n                console.log(res)\n            )\n    };\n\n\n    render() {\n\n        const responseGoogle = (response) => {\n            console.log(response);\n            this.setState ({\n                id_token: response.tokenObj.id_token\n            });\n            this.getUserDetails();\n        }\n        \n        return (\n\n            <Container>\n                <div className=\"header\">\n                    <div className=\"googleSignIn\">\n                        <GoogleLogin\n                            clientId=\"894965613215-q002ho1pdjsdg42cftph6h9tt66viv3p.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            onSuccess={responseGoogle}\n                            onFailure={responseGoogle} />\n                    </div>\n                    <br></br><br></br>\n                    <h1 id=\"loginPageTitle\" className=\"text-center\">Welcome to PodHub!</h1>\n                    <h4 id=\"slogan\" className=\"text-center\">Share what you care about!</h4>\n                </div>\n            </Container>\n\n        )\n    }\n}\n\nexport default Login; \n","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import logo from './images/logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport SearchResults from \"./components/SearchResults/SearchResults\";\nimport EpisodeList from \"./pages/EpisodeList\";\nimport Login from \"./pages/Login\";\nimport Container from \"./components/Container/container\";\nimport API from \"./utils/API\";\n\n\nclass App extends Component {\n\n  state = {\n    userSearch: \"\",\n    podcastSearch: \"\",\n    users: [],\n    podcasts: [\n      {\n        podcast_id: 1234,\n        thumbnail: \"https://picsum.photos/200/200\",\n        title: \"Test Podcast 1\"\n      },\n      {\n        podcast_id: 1234,\n        thumbnail: \"https://picsum.photos/200/200\",\n        title: \"Test Podcast 2\"\n      },\n      {\n        podcast_id: 1234,\n        thumbnail: \"https://picsum.photos/200/200\",\n        title: \"Test Podcast 3\"\n      }\n    ],\n    showResults: \"hide\"\n  };\n\n  // When input is changed, update state\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    }, () => { this.checkContent() });\n  };\n\n  // Check Podcast Search field for text\n  // If text is found, show Search Results \n  // If empty, hide Search Results\n  checkContent = () => {\n    if (this.state.podcastSearch != \"\") {\n      this.setState({\n        showResults: \"show\"\n      })\n    }\n    else {\n      this.setState({\n        showResults: \"hide\"\n      })\n    }\n  }\n\n  getPodcasts = () => {\n    API.getPodcasts(this.state.podcastSearch)\n      .then(res =>\n        this.setState({\n          podcasts: res.data\n        })\n      )\n      .catch(() =>\n        this.setState({\n          podcasts: [],\n          message: \"We couldn't find a match.\"\n        })\n      );\n  };\n\n  getUsers = () => {\n    API.getUsers(this.state.userSearch)\n      .then(res =>\n        this.setState({\n          users: res.data\n        })\n      )\n      .catch(() =>\n        this.setState({\n          users: [],\n          message: \"We couldn't find a match.\"\n        })\n      );\n  };\n\n  handleUserSubmit = event => {\n    event.preventDefault();\n    this.getUsers();\n  };\n\n  handlePodcastSubmit = event => {\n    event.preventDefault();\n    this.getPodcasts();\n  };\n\n  \n\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          <Navbar\n            handleUserSubmit={this.handleUserSubmit}\n            handlePodcastSubmit={this.handlePodcastSubmit}\n            userSearch={this.state.userSearch}\n            podcastSearch={this.podcastSearch}\n            handleInputChange={this.handleInputChange}\n            logout={this.logout}\n          />\n          <SearchResults\n            podcasts={this.state.podcasts}\n            show={this.state.showResults}\n          />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/episodeList\" component={EpisodeList} /> {/* Temp Route */}\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}