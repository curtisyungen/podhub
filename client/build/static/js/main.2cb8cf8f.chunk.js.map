{"version":3,"sources":["components/Navbar/navbar.js","components/Container/container.js","components/Row/row.js","components/Col/col.js","utils/API.js","components/PostCard/postCard.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","placeholder","Container","props","children","Row","Col","API","getPosts","userId","axios","get","getEpisodes","podcastId","Card","_ref","photo","name","date","message","icon","title","description","link","likes","comments","src","href","Home","state","posts","userProfileImage","userName","podcastIcon","podcastEpisode","episodeDescription","refreshPosts","_this","then","res","setState","data","catch","container","row","this","length","map","post","PostCard_postCard","key","Component","App","Navbar_navbar","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cb8cf8f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\n\nfunction Navbar() {\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-success\">\n      <Link className=\"navbarText navbar-brand\" to=\"/\">PodHub</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <ul className=\"navbar-nav mr-auto\">\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/profile\"\n              className={\n                window.location.pathname === \"/profile\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Profile\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/home\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n        </ul>\n\n        <form className=\"form-inline my-2 my-lg-0 searchUserForm\">\n          <input className=\"form-control mr-sm-2 searchUserInput\" type=\"search\" placeholder=\"Search for an user\" aria-label=\"Search\" />\n        </form>\n\n        <form className=\"form-inline my-2 my-lg-0 searchPodcastForm\">\n          <input className=\"form-control mr-sm-2 searchPodcastInput\" type=\"search\" placeholder=\"Search for a podcast\" aria-label=\"Search\" />\n        </form>\n\n\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  return <div className=\"col\">{props.children}</div>;\n}\n\nexport default Col;\n","import axios from \"axios\";\n\nexport default {\n\n    // Gets all posts for specific user\n    getPosts: function(userId) {\n        return axios.get(\"/home\", userId);\n    },\n\n    // Gets all episodes for a particular podcast\n    getEpisodes: function(podcastId) {\n        return axios.get(\"/api/getEpisodes\", podcastId);\n    }\n\n};\n","import React from \"react\";\nimport \"./postCard.css\";\n\n// function Card ({photo, name, date, message, icon, episode, link, like, comments}) \nfunction Card({ photo, name, date, message, icon, title,description, link, likes, comments }) {\n  return (\n    <div className=\"container rounded-0 border-top-0 border-left-0 border-right-0 card\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <img src={photo} />\n        </div>\n        <div className=\"col\">\n          <div className=\"row\">{name} &nbsp;|&nbsp; {date}</div>\n          <div className=\"row\">{message}</div>\n          <div className=\"row border rounded\">\n            <div className=\"col-2 p-0\">\n              <img src={icon} />\n            </div>\n            <div className=\"col p-0\">\n            <p>{title}</p>\n            <p>{description}</p>\n            <a href={link}>{link}</a>\n            </div>\n          </div>\n          <div className=\"row pb-1\">\n            <a className=\"likes\">Likes:&nbsp;{likes}&nbsp;</a>\n            <a className=\"comments\"> Comments:&nbsp;{comments}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Card;\n\n\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\nimport Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                userProfileImage: \"<image>\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                userProfileImage: \"<image>\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        userId: \"\"\n    };\n\n    // Add funtion to cal getPost function on window onload and everytime when there is a new post added or every 2 mins or so\n    //// Code goes here\n\n    refreshPosts = () => {\n        //\n\n\n        this.getPosts();\n    };\n\n    // API request to get the user's and his follower's posts\n    getPosts = () => {\n        API.getPosts(this.state.userId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    message: \"Please follow someone or post something to see posts\"\n                })\n            );\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <h2 className=\"text-center\">{this.state.message}</h2>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import logo from './images/logo.svg';\nimport './App.css';\n\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport Home from \"./pages/Home\";\nimport Container from \"./components/Container/container\";\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"wrapper\">\n        <Navbar />\n        <Container>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/home\" component={Home}/>\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  )\n}\n\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Welcome to PodHub!</h1>\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}