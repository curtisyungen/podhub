{"version":3,"sources":["components/Navbar/navbar.js","components/List/list.js","components/Podcast/podcast.js","components/Container/container.js","components/PodcastSearch/podcastSearch.js","components/Row/row.js","utils/API.js","components/PostCard/postCard.js","pages/Home.js","pages/Profile.js","components/Episode/episode.js","pages/EpisodeList.js","components/AudioPlayer/audioPlayer.js","components/Portal/portal.js","pages/Listen.js","components/User/user.js","pages/UserSearch.js","App.js","pages/Login.js","pages/Error.js","Application.js","serviceWorker.js","index.js"],"names":["library","add","faSearch","Navbar","_ref","podcastSearch","handleInputChange","logout","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","react_fontawesome_index_es","icon","placeholder","value","name","autoComplete","onChange","onFocus","required","google_login","buttonText","onLogoutSuccess","List","children","Podcast","podcastId","podcastName","podcastLogo","thumbnail","hide","state","onClick","src","alt","Container","props","PodcastSearch","show","podcasts","container","length","list","map","podcast","components_Podcast_podcast","key","title_original","image","Row","API","getPosts","userId","axios","get","getPostsOnlyByUser","getUsers","user","getPodcasts","URL","headers","X-RapidAPI-Key","then","response","catch","error","console","log","getEpisodes","pagination","numEpisodes","request","episodes","data","pub_date_ms","concat","getOrCreateUser","id_token","post","getFollowers","getFollowing","getFavorites","handleFavoriteDelete","addEpisodeToFavorites","episodeId","addPodcastToFavorites","Card","photo","date","message","title","description","link","likes","comments","href","Home","posts","userProfileImage","userName","podcastIcon","podcastEpisode","episodeDescription","googleUserId","_this","res","setState","row","this","PostCard_postCard","Component","followers","following","favorites","podcastTitle","podcastDescription","messageNoPodcast","messageNoFav","deleteFavorite","_this2","Episode","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","listenToEpisode","event","preventDefault","redirect","es_Redirect","episodeName","audioLink","replace","EpisodeList","componentDidMount","convertDate","date_ms","Date","getMonth","getDay","getFullYear","toString","convertTime","time_sec","hours","Math","floor","minutes","seconds","addZeroHours","addZeroMins","addZeroSecs","addToFavorites","alert","episode","components_Episode_episode","audio_length","audio","AudioPlayer","audioElement","React","createRef","_this$props$playbackR","playbackRate","current","onratechange","setPlaybackRate","prevProps","controls","ref","Portal","containerEl","document","externalWindow","open","body","appendChild","close","ReactDOM","createPortal","PureComponent","Listen","showModal","showPortal","speed","handleShowModal","handleCloseModal","handleShareEpisode","togglePortal","handleChange","target","AudioPlayer_audioPlayer","min","max","step","htmlFor","Portal_portal","for","lib_index_es","onClose","center","User","userImage","handler","UserSearch","userSearch","users","_event$target","defineProperty","timer","clearTimeout","setTimeout","checkContent","components_User_user","App","showPodcasts","results","hidePodcasts","sessionStorage","clear","Switch","Redirect","BrowserRouter","Navbar_navbar","components_PodcastSearch_podcastSearch","Route","exact","path","component","Profile","Login","setItem","email","googleId","profileImage","getItem","responseGoogle","tokenObj","google_login_default","clientId","onSuccess","onFailure","textStyle","left","right","width","position","Error","style","role","Application","Boolean","hostname","match","render","src_Application","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f344cd1d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport \"./navbar.css\";\nimport { GoogleLogout } from 'react-google-login';\n\nlibrary.add(faSearch);\n\nfunction Navbar({ podcastSearch, handleInputChange, logout }) {\n\n  return (\n\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-success\">\n\n      <Link className=\"navbarText navbar-brand\" to=\"/home\">PodHub</Link>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/profile\"\n              className={\n                window.location.pathname === \"/profile\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Profile\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/home\"\n              className={\n                window.location.pathname === \"/home\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              to={{\n                pathname: \"/userSearch\",\n              }}\n              className=\"btn btn-dark btn-sm findUsers\"\n            >\n              <FontAwesomeIcon icon=\"search\" />\n              <span>&nbsp; Find Users</span>\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav\">\n          <form className=\"form-inline my-2 my-lg-0 searchPodcastForm\">\n            <input className=\"form-control mr-sm-2 searchPodcastInput\"\n              type=\"search\"\n              placeholder=\"Search for a podcast\"\n              aria-label=\"Search\"\n              id=\"podcastInput\"\n              value={podcastSearch}           \n              name=\"podcastSearch\"\n              autoComplete=\"off\"\n              onChange={handleInputChange}\n              onFocus={handleInputChange}\n              required\n            />\n          </form>\n        </ul>\n\n        <GoogleLogout\n          buttonText=\"Logout\"\n          onLogoutSuccess={logout}\n        >\n        </GoogleLogout>\n\n      </div>\n\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\r\n\r\n// LIST AND LIST ITEM COMPONENTS\r\n\r\nexport const List = ({ children }) => (\r\n    <ul className=\"list-group\">\r\n      {children}\r\n    </ul>\r\n  );\r\n  \r\nexport function ListItem({ children }) {\r\n    return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./podcast.css\";\r\n\r\n// PODCAST COMPONENT\r\n// This component represents an individual Podcast.\r\n// It contains a link that will redirect the user to the Episode List page.\r\n// Upon redirecting it will send along information on the Podcast ID, Name, and Logo for use down the line. \r\n// It also contains an onClick event handler which is passed down from App.js. This handler hides the Search Results dropdown.\r\n\r\nfunction Podcast ({ podcastId, podcastName, podcastLogo, thumbnail, hide }) {\r\n\r\n    return (\r\n        \r\n        <Link to={{\r\n            pathname: \"/episodeList\", \r\n            state: {\r\n                podcastId: podcastId,\r\n                podcastName: podcastName,\r\n                podcastLogo: podcastLogo\r\n            }\r\n            }} \r\n            className=\"podcast\"\r\n            onClick={hide}\r\n        >\r\n        <span><img className=\"podcastLogoSmall\" src={thumbnail} alt=\"Podcast Logo\"/></span>\r\n        <span><p className=\"podcastTitle\">{podcastName}</p></span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Podcast;\r\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\r\nimport List from \"../List/list\";\r\nimport Podcast from \"../Podcast/podcast\";\r\nimport Container from \"../Container/container\";\r\nimport \"./podcastSearch.css\";\r\n\r\n// PODCAST SEARCH (RESULTS) COMPONENT\r\n// This component displays the search results for podcasts depending on a user query.\r\n// This query comes from the Podcast Search box in the Nav Bar.\r\n// It renders each podcast using the Podcast component.\r\n// It will appear on the right side of the screen as a floating drop-down menu. \r\n// It will only be visible if the user has typed/changed text in the Podcast Search box. \r\n\r\nfunction PodcastSearch ({ show, hide, podcasts }) {\r\n\r\n    return (\r\n        <Container>\r\n            <div className={show}>\r\n                {podcasts.length > 0 ? (\r\n                    <List>\r\n                        {podcasts.map((podcast) =>\r\n                            <Podcast \r\n                                key={podcast.id}\r\n                                podcastId={podcast.id}\r\n                                podcastName={podcast.title_original}\r\n                                podcastLogo={podcast.image}\r\n                                thumbnail={podcast.thumbnail}\r\n                                hide={hide}\r\n                            />\r\n                        )}       \r\n                    </List>\r\n                ) : (\r\n                    <p>No podcasts found.</p>\r\n                )}\r\n            </div>\r\n        </Container>\r\n        )\r\n};\r\n\r\nexport default PodcastSearch;\r\n\r\n\r\n\r\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import axios from \"axios\";\n\nexport default {\n\n    // Gets all posts for specific user\n    getPosts: function (userId) {\n        return axios.get(\"/api/getPosts\", userId);\n    },\n\n    getPostsOnlyByUser: function (userId) {\n        return axios.get(\"/api/getPostsOnlyByUser\", userId);\n    },\n\n    getUsers: function (user) {\n        return axios.get(\"api/getUsers\", user)\n    },\n\n    // Gets all episodes for a particular podcast\n    getPodcasts: function (podcast) {\n        var URL = \"https://listennotes.p.rapidapi.com/api/v1/search?sort_by_date=0&type=podcast&only_in=title&language=English&q=\" + podcast;\n\n        return axios.get(URL, { 'headers': { 'X-RapidAPI-Key': \"a063bce4f1msh0a4f44209d57a2fp1225adjsn3f80cc1cf1bb\" } })\n            .then((response) => {\n                // console.log(\"Podcasts\", response);\n                return response;\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },\n\n    // Gets all episodes for a particular podcast\n    getEpisodes: function (podcastId, pagination) {\n        let numEpisodes = 0;\n        let episodes = [];\n\n        return request(podcastId, pagination, episodes);\n\n        function request(podcastId, pagination, episodes) {\n\n            let URL = \"https://listennotes.p.rapidapi.com/api/v1/podcasts/\" + podcastId + \"?sort=recent_first&next_episode_pub_date=\" + pagination;\n\n            return axios.get(URL, { 'headers': { 'X-RapidAPI-Key': \"a063bce4f1msh0a4f44209d57a2fp1225adjsn3f80cc1cf1bb\" } })\n                .then((response => {\n                    numEpisodes = response.data.episodes.length;\n                    \n                    if (numEpisodes > 0 && episodes.length < 100) {\n\n                        pagination = response.data.episodes[numEpisodes-1].pub_date_ms;\n                        return request(podcastId, pagination, episodes.concat(response.data.episodes));\n\n                    } else {\n\n                        return episodes;\n\n                    }\n                }))\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    },\n\n    getOrCreateUser: function (id_token) {\n        return axios.post(\"/api/users?id_token=\" + id_token);\n    },\n\n    getFollowers: function (userId) {\n        return axios.get(\"/api/getFollowers\", userId);\n    },\n\n    getFollowing: function (userId) {\n        return axios.get(\"/api/getFollowing\", userId);\n    },\n\n    getFavorites: function (id) {\n        return axios.get(\"/api/favorites\", id);\n    },\n\n    handleFavoriteDelete: function (id) {\n        return axios.post(\"/api/favorites\", id);\n    },\n\n    addEpisodeToFavorites: function (episodeId) {\n        // add episode to user's favorite episodes\n        return episodeId;\n    },\n\n    addPodcastToFavorites: function (podcastId) {\n        // add podcast to user's favorite podcasts\n        return podcastId;\n    }\n\n};\n","import React from \"react\";\nimport \"./postCard.css\";\n\n// POST COMPONENT\n\nfunction Card({ photo, name, date, message, icon, title, description, link, likes, comments }) {\n  return (\n    <div className=\"container rounded-0 border-top-0 border-left-0 border-right-0 card\">\n      <div className=\"row\">\n        <div className=\"col-1\">\n          <img id=\"profileImage\" src={photo} alt=\"Poster\"/>\n        </div>\n        <div className=\"col\">\n          <div className=\"row\">{name} &nbsp;|&nbsp; {date}</div>\n          <div className=\"row\">{message}</div>\n          <div className=\"row border rounded\">\n            <div className=\"col-2 p-0\">\n              <img id=\"podcastIcon\" src={icon} alt=\"Podcast Icon\"/>\n            </div>\n            <div className=\"col p-0\">\n            <p>{title}</p>\n            <p>{description}</p>\n            <a href={link}>{link}</a>\n            </div>\n          </div>\n          <div className=\"row pb-1\">\n            <a href=\"/\" className=\"likes\">Likes:&nbsp;{likes}&nbsp;</a>\n            <a href=\"/\" className=\"comments\"> Comments:&nbsp;{comments}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Card;\n\n\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n//import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                id: 1,\n                userProfileImage: \"https://picsum.photos/200\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"https://picsum.photos/200\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                id: 2,\n                userProfileImage: \"https://picsum.photos/200\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"https://picsum.photos/200\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        user: [\n            {\n                name: \"John Smith\",\n                userProfileImage: \"https://picsum.photos/200\",\n                googleUserId: \"1111\",\n            },\n        ],\n\n    };\n\n    // componentDidMount() {\n    //     this.getPosts();\n    // };\n\n    // Add function to call getPost function every time when something is posted or every 2 mins or so\n\n\n    // API request to get the user's and his follower's posts\n    getPosts = () => {\n        API.getPosts(this.state.user.googleUserId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    message: \"No podcast found, please post something or follow someone to see the feeds.\"\n                })\n            );\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <h4 className=\"text-center\">{this.state.message}</h4>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n//import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\nimport \"./Profile.css\";\n\n// USER PROFILE PAGE\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                id: 1,\n                userProfileImage: \"https://picsum.photos/200\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"https://picsum.photos/200\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                id: 2,\n                userProfileImage: \"https://picsum.photos/200\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"https://picsum.photos/200\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        user: [\n            {\n                name: \"John Smith\",\n                userProfileImage: \"https://picsum.photos/300\",\n                googleUserId: \"1111\"\n            }\n        ],\n        followers: 5,\n        following: 10,\n        favorites: [\n            {\n                id: 1,\n                podcastIcon: \"https://picsum.photos/100\",\n                podcastTitle: \"Favorite podcast 1\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            },\n            {\n                id: 2,\n                podcastIcon: \"https://picsum.photos/100\",\n                podcastTitle: \"Favorite podcast 2\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            },\n            {\n                id: 3,\n                podcastIcon: \"https://picsum.photos/100\",\n                podcastTitle: \"Favorite podcast 3\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            }\n        ]\n    };\n\n    // componentDidMount() {\n    //     this.getPostsOnlyByUser();\n    //     this.getFavorites();\n    //     this.getOrCreateUser();\n    //     this.getFollowers();\n    //     this.getFollowing();\n    // };\n\n    getPostsOnlyByUser = () => {\n        API.getPostsOnlyByUser(this.state.userId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    messageNoPodcast: \"No posts found, post something.\"\n                })\n            );\n    };\n\n    getFavorites = () => {\n        API.getFavorites(this.state.userId)\n            .then(res =>\n                this.setState({\n                    favorites: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    favorites: [],\n                    messageNoFav: \"No favorites found. Search for a podcast and add it to your favorites.\"\n                })\n            );\n    };\n\n    getOrCreateUser = () => {\n        API.getOrCreateUser(this.state.userId)\n            .then(res =>\n                this.setState({\n                    user: res.data\n                })\n            );\n    };\n\n    getFollowers = () => {\n        API.getFollowers(this.state.userId)\n            .then(res =>\n                this.setState({\n                    followers: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    followers: 0,\n                })\n            );\n    };\n\n    getFollowing = () => {\n        API.getFollowing(this.state.userId)\n            .then(res =>\n                this.setState({\n                    following: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    following: 0,\n                })\n            );\n    };\n\n    handleFavoriteDelete = id => {\n        API.deleteFavorite(id).then(res => this.getFavorites());\n    };\n\n\n    render() {\n        return (\n            <Container >\n                <div className=\"row userProfile rounded bg-light\">\n                    <div className=\"col-4\">\n                        <img src={this.state.user[0].userProfileImage} alt=\"User\" id=\"userMainProfileImage\"/>\n                    </div>\n\n                    <div className=\"col-8\">\n                        <Row>\n                            <h2>{this.state.user[0].name}</h2>\n                        </Row>\n                        <Row>\n                            Posts:&nbsp; {this.state.posts.length} &nbsp; | &nbsp;\n                            Followers:&nbsp;{this.state.followers}&nbsp; | &nbsp;\n                            Following:&nbsp;{this.state.following}\n                        </Row>\n                    </div>\n                </div>\n\n                <div className=\"row favorites rounded\">\n                    <h4>Favorites: </h4>\n                    {this.state.favorites.length ? (\n                        <Container>\n                            {this.state.favorites.map(favorites => (\n\n                                <div className=\"row border rounded favorite\" key={favorites.id}>\n\n                                    <div className=\"col-2 p-0\">\n\n                                        <img src={favorites.podcastIcon} alt=\"Podcast Icon\" id=\"favoriteIcon\" />\n                                    </div>\n                                    <div className=\"col p-0\">\n                                        <p>{favorites.podcastTitle}</p>\n                                        <p>{favorites.podcastDescription}</p>\n                                        <a href={favorites.link}>{favorites.link}</a> &nbsp;\n\n                                            <button className=\"btn btn-sm mb-1 btn-light\"\n                                            onClick={() => this.handleFavoriteDelete(favorites.id)}\n                                        >\n                                            x\n                                            </button>\n\n                                    </div>\n                                </div>\n                            ))}\n                        </Container>\n                    ) : (\n                            <div className=\"col\">\n                                <h5 className=\"text-center\">&nbsp;{this.state.messageNoFav}</h5>\n                            </div>\n                        )}\n                </div>\n                <Row>\n                    <h4>Recent posts:</h4>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <div className=\"col\">\n                                <h5 className=\"text-center\">&nbsp;{this.state.messageNoPodcast}</h5>\n                            </div>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport \"./episode.css\";\r\n\r\n// EPISODE COMPONENT \r\n// This component displays the details of an individual episode.\r\n// It contains a link that will redirect the user to the Listen to Podcast page.\r\n\r\nclass Episode extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props); \r\n    this.state = { redirect: false };\r\n  }\r\n\r\n  listenToEpisode = event => {\r\n    event.preventDefault();\r\n    \r\n    this.setState({\r\n      redirect: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    if (this.state.redirect) {\r\n              \r\n      return ( \r\n        <Redirect\r\n          to={{\r\n            pathname: \"/listen\",\r\n            state: {\r\n              podcastId: this.props.podcastId,\r\n              podcastName: this.props.podcastName,\r\n              podcastLogo: this.props.podcastLogo,\r\n              episodeId: this.props.episodeId,\r\n              episodeName: this.props.episodeName,\r\n              date: this.props.date,\r\n              description: this.props.description,\r\n              audioLink: this.props.audioLink\r\n            }\r\n          }}\r\n        />\r\n      )\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n      <div className=\"container rounded-0 border-0 card\">\r\n        <div className=\"col\">\r\n\r\n          {/* Name | Date */}\r\n          <div className=\"row\">\r\n            {this.props.episodeName} &nbsp;|&nbsp; {this.props.date} &nbsp;|&nbsp; {this.props.length}\r\n          </div>\r\n\r\n          <div className=\"border rounded\">\r\n\r\n            {/* Episode Description */}\r\n            <span>{this.props.description.replace(/<\\/?[^>]+(>|$)/g, \"\")}<br /></span>\r\n\r\n            <button className=\"btn btn-primary\" onClick={this.listenToEpisode}>Listen</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Episode;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"../components/Container/container\";\r\nimport Row from \"../components/Row/row\";\r\nimport List from \"../components/List/list\";\r\nimport Episode from \"../components/Episode/episode\";\r\nimport API from \"../utils/API\";\r\n\r\n// EPISODE LIST PAGE\r\n// This page displays a list of episodes for a particular podcast.\r\n\r\nclass EpisodeList extends Component {\r\n\r\n    state = {\r\n        podcastId: \"\",\r\n        podcastName: \"\",\r\n        podcastLogo: \"\",\r\n        episodes: []\r\n    };\r\n\r\n    // On page load, update State with Podcast ID and Logo url\r\n    // Then call .getEpisodes\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            podcastId: this.props.location.state.podcastId,\r\n            podcastName: this.props.location.state.podcastName,\r\n            podcastLogo: this.props.location.state.podcastLogo\r\n        }, () => { this.getEpisodes() });\r\n    }\r\n\r\n    // Get episodes for podcast by Podcast ID\r\n    // Gets 100 episodes at a time\r\n    getEpisodes = () => {\r\n        let pagination = 0;\r\n        let numEpisodes = this.state.episodes.length;\r\n\r\n        if (numEpisodes > 0) {\r\n            pagination = this.state.episodes[numEpisodes-1].pub_date_ms;\r\n        }\r\n\r\n        API.getEpisodes(this.state.podcastId, pagination)\r\n            .then(res => {\r\n\r\n                if (numEpisodes > 0) {\r\n                    res = this.state.episodes.concat(res);\r\n                }\r\n\r\n                this.setState({\r\n                    episodes: res\r\n                })\r\n            })\r\n            .catch(() =>\r\n                this.setState({\r\n                    episodes: [],\r\n                    message: \"No episodes found.\"\r\n                })\r\n            );\r\n    };\r\n\r\n    // Converts date from ms to MM/DD/YYYY format\r\n    convertDate = (date_ms) => {\r\n        let date = new Date(date_ms);\r\n        return `${date.getMonth() + 1}/${date.getDay() + 1}/${date.getFullYear().toString()}`;\r\n    }\r\n\r\n    // Converts time from seconds to HH:MM:SS format\r\n    convertTime = (time_sec) => {\r\n        let hours = Math.floor(time_sec / 3600);\r\n\r\n        time_sec = time_sec - (hours * 3600);\r\n\r\n        let minutes = Math.floor(time_sec / 60);\r\n        let seconds = time_sec - (minutes * 60);\r\n\r\n        let addZeroHours = \"\";\r\n        let addZeroMins = \"\";\r\n        let addZeroSecs = \"\";\r\n\r\n        if (hours < 10) {\r\n            addZeroHours = 0;\r\n        }\r\n\r\n        if (minutes < 10) {\r\n            addZeroMins = 0;\r\n        }\r\n\r\n        if (seconds < 10) {\r\n            addZeroSecs = 0;\r\n        }\r\n\r\n        return `${addZeroHours}${hours}:${addZeroMins}${minutes}:${addZeroSecs}${seconds}`;\r\n    }\r\n\r\n    // Adds Podcast to list of User's Favorite Podcasts \r\n    addToFavorites = event => {\r\n        event.preventDefault();\r\n\r\n        API.addPodcastToFavorites(this.state.podcastId);\r\n        alert(\"Favorited!\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Episodes</h1>\r\n                <img\r\n                    src={this.state.podcastLogo}\r\n                    alt=\"Podcast Logo\"\r\n                />\r\n                \r\n                <br />\r\n                <Row>\r\n\r\n                    <button className=\"btn btn-danger\" onClick={this.addToFavorites}>Favorite</button>\r\n\r\n                    {this.state.episodes.length ? (\r\n                        <Container>\r\n                            <List>\r\n                                {this.state.episodes.map(episode => (    \r\n                                    <Episode\r\n                                        key={episode.id}\r\n                                        podcastId={this.state.podcastId}\r\n                                        podcastName={this.state.podcastName}\r\n                                        podcastLogo={this.state.podcastLogo}\r\n                                        episodeId={episode.id}\r\n                                        episodeName={episode.title}\r\n                                        date={this.convertDate(episode.pub_date_ms)}\r\n                                        length={this.convertTime(episode.audio_length)}\r\n                                        description={episode.description}\r\n                                        audioLink={episode.audio}\r\n                                    />\r\n                                ))}\r\n                            </List>\r\n                            <button className=\"btn btn-dark\" onClick={this.getEpisodes}>Load More</button>\r\n                        </Container>\r\n                    ) : (\r\n                            <h2 className=\"text-center\">{this.state.message}</h2>\r\n                        )}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EpisodeList;\r\n","import React, { Component } from \"react\";\r\nimport \"./audioPlayer.css\";\r\n\r\n// AUDIO PLAYER COMPONENT\r\n\r\nclass AudioPlayer extends Component {\r\n    constructor(props) {\r\n        console.log(\"props\", props)\r\n\r\n        super(props);\r\n        this.audioElement = React.createRef();\r\n    }\r\n\r\n    // We can call this method from lifecycle methods when we need to adjust the playback rate.\r\n    setPlaybackRate() {\r\n        // set the default playback rate to 1.0\r\n        const {playbackRate = 1.0} = this.props;\r\n\r\n        const audioElement = this.audioElement.current;\r\n\r\n        // Set the playback rate to the playbackRate in our props\r\n        console.log(\"Setting the playbackRate to\", playbackRate);\r\n        audioElement.playbackRate = playbackRate;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const audioElement = this.audioElement.current;\r\n\r\n        // Add a listener to let us know if the playback rate changes.\r\n        audioElement.onratechange = (event) => {\r\n            console.log('The playback rate changed.', event);\r\n\r\n            // Sometimes the audio element resets itself to 1x speed.\r\n            // If that happens, this will catch it and reset the speed to what we want.\r\n            if (audioElement.playbackRate !== this.props.playbackRate) {\r\n                this.setPlaybackRate();\r\n            }\r\n        };\r\n\r\n        this.setPlaybackRate();        \r\n    }\r\n\r\n    // Will be called whenever the component is updated (e.g., when props change)\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.playbackRate !== prevProps.playbackRate) {\r\n          // We've got a new playback rate.\r\n          this.setPlaybackRate();\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { audioLink } = this.props;\r\n\r\n        // let speed = this.refs.audioSpeed;\r\n        // speed.playbackRate = 0.5;\r\n\r\n        return (\r\n            <div>\r\n                <audio\r\n                    src={audioLink}\r\n                    type=\"audio/mpeg\"\r\n                    controls\r\n                    ref={this.audioElement}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AudioPlayer;\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./portal.css\";\r\n\r\n// PORTAL COMPONENT\r\n// This component is a ReactDOM pop-up window.\r\n// It is called from the Listen to Podcast page when user clicks \"Open Portal\".\r\n// It is a miniature window that contains only Podcast title, Episode title, and audio player.\r\n\r\nclass Portal extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.containerEl = document.createElement('div');\r\n        this.externalWindow = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.externalWindow = window.open('', '', 'width=400,height=200,left=200,top=200,scrollbars=no');\r\n        this.externalWindow.document.title=\"Podhub Audio\";\r\n        this.externalWindow.document.body.appendChild(this.containerEl); \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.externalWindow.close();\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.containerEl);\r\n    }\r\n}\r\n\r\nexport default Portal;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"../components/Container/container\";\r\nimport Row from \"../components/Row/row\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport AudioPlayer from \"../components/AudioPlayer/audioPlayer\";\r\nimport Portal from \"../components/Portal/portal\";\r\nimport API from \"../utils/API\";\r\n\r\n// LISTEN TO PODCAST PAGE\r\n// This page allows a user to listen to a podcast.\r\n// It renders a ListenView component which contains all relevant info on the podcast as well as the audio player.\r\n\r\nclass Listen extends Component {\r\n\r\n    state = {\r\n        podcastId: \"\",\r\n        podcastName: \"\",\r\n        podcastLogo: \"\",\r\n        episodeId: \"\",\r\n        episodeName: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        audioLink: \"\",\r\n        showModal: false,\r\n        showPortal: false,\r\n        speed: 1.0,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            podcastId: this.props.location.state.podcastId,\r\n            podcastName: this.props.location.state.podcastName,\r\n            podcastLogo: this.props.location.state.podcastLogo,\r\n            episodeId: this.props.location.state.episodeId,\r\n            episodeName: this.props.location.state.episodeName,\r\n            date: this.props.location.state.date,\r\n            description: this.props.location.state.description,\r\n            audioLink: this.props.location.state.audioLink\r\n        });\r\n    }\r\n\r\n    // Opens the Share Episode modal\r\n    // Executed upon user clicking \"Share\" button on page\r\n    handleShowModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    // Closes Share Episode modal\r\n    // Executed upon user clicking \"Share\" button in modal\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            showModal: false\r\n        });\r\n    }\r\n\r\n    // Shares episode as new post on user's profile\r\n    // Executes when user clicks \"Share\" in modal\r\n    // Closes modal\r\n    handleShareEpisode = event => {\r\n        event.preventDefault();\r\n        this.handleCloseModal();\r\n        alert(\"shared\");\r\n        // Call Share Episode sequence\r\n    }\r\n\r\n    // Adds this episode to User's list of Favorite Episodes\r\n    addToFavorites = event => {\r\n        event.preventDefault();\r\n        API.addEpisodeToFavorites(this.state.episodeId);\r\n        alert(\"Favorited!\");\r\n    }\r\n\r\n    // Activates pop-out window with podcast audio\r\n    togglePortal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPortal: !this.state.showPortal\r\n        }, () => console.log(this.state));\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            speed: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/episodeList\",\r\n                            state: {\r\n                                podcastId: this.state.podcastId,\r\n                                podcastName: this.state.podcastName,\r\n                                podcastLogo: this.state.podcastLogo\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.podcastName}\r\n                    </Link>\r\n                    <img src={this.state.podcastLogo} alt=\"Podcast Logo\" />\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <div>\r\n                        <h4>{this.state.episodeName} &nbsp;|&nbsp; {this.state.date}</h4>\r\n\r\n                        <AudioPlayer\r\n                            audioLink={this.state.audioLink}\r\n                            playbackRate={this.state.speed}\r\n                        />\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"2.35\"\r\n                            value={this.state.speed}\r\n                            onChange={this.handleChange}\r\n                            step=\".15\"\r\n                            list=\"steplist\"\r\n                        />\r\n                        <label htmlFor=\"steplist\">Speed</label>\r\n\r\n                    </div>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <div>\r\n                        <p>{this.state.description.replace(/<\\/?[^>]+(>|$)/g, \"\")}</p>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.handleShowModal}>Share</button>\r\n                    <button className=\"btn btn-danger\" onClick={this.addToFavorites}>Favorite</button>\r\n                    <button className=\"btn btn-dark\" onClick={this.togglePortal}>Open Portal</button>\r\n                </Row>\r\n\r\n                {this.state.showPortal && (\r\n                    <Portal>\r\n                        <h4>{this.state.podcastName}</h4>\r\n                        <p>{this.state.episodeName}</p>\r\n\r\n                        <AudioPlayer\r\n                            audioLink={this.state.audioLink}\r\n                            playbackRate={this.state.speed}\r\n                        />\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"2.35\"\r\n                            value={this.state.speed}\r\n                            onChange={this.handleChange}\r\n                            step=\".15\"\r\n                            list=\"steplist\"\r\n                        />\r\n                        <label for=\"steplist\">Speed</label>\r\n\r\n                        <br />\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={this.togglePortal}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </Portal>\r\n                )}\r\n\r\n                <Modal open={this.state.showModal} onClose={this.togglePortal} center>\r\n\r\n                    <Container>\r\n                        <div>\r\n                            <h4>{this.state.podcastName}</h4>\r\n                            <img src={this.state.podcastLogo} alt=\"Podcast Logo\" />\r\n                            <p>{this.state.episodeName}</p>\r\n                        </div>\r\n\r\n                        <form>\r\n                            <input className=\"userPostInput\" placeholder=\"Enter message\"></input>\r\n                        </form>\r\n\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={this.handleShareEpisode}\r\n                        >\r\n                            Share\r\n                        </button>\r\n                    </Container>\r\n\r\n                </Modal>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Listen;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./user.css\";\r\n\r\n// USER COMPONENT\r\n// This component represents an individual user.\r\n// It displays information such as User Name, Profile Image, and number of Followers.\r\n// It includes a link to the user's profile page.\r\n\r\nfunction User ({ userId, userName, userImage, handler }) {\r\n    \r\n    return (\r\n\r\n        <Link to={{\r\n            pathname: \"/userProfile\",\r\n            state: {\r\n                userId: userId,\r\n                userName: userName,\r\n                userImage: userImage\r\n            }\r\n            }}\r\n            className=\"user\"\r\n            onClick={handler}>\r\n\r\n            <span><img className=\"userImage\" src={userImage} alt=\"User\"/></span>\r\n            <span><p className=\"userName\">{userName}</p></span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default User;","import React, { Component } from \"react\";\r\nimport Container from \"../components/Container/container\";\r\nimport List from \"../components/List/list\";\r\nimport User from \"../components/User/user\";\r\n// import API from \"../utils/API\";\r\nimport \"./UserSearch.css\";\r\n\r\n// USER SEARCH PAGE\r\n\r\nclass UserSearch extends Component {\r\n\r\n    state = {\r\n        message: \"\",\r\n        userSearch: \"\",\r\n        users: []\r\n    }\r\n\r\n    // Listen for when user enters text into User search field\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            let timer;\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => this.checkContent(), 500);\r\n        });\r\n    };\r\n\r\n    // Check if User Search input has text and show/hide\r\n    checkContent = () => {\r\n        // Show Podcast search results\r\n        if (this.state.userSearch !== \"\") {\r\n            this.getUsers();\r\n        }\r\n    }\r\n\r\n    getUsers = () => {\r\n\r\n        this.setState({\r\n            users: [\r\n                {\r\n                    userId: \"1\",\r\n                    userName: \"Curtis\",\r\n                    userImage: \"https://picsum.photos/200\"\r\n                }, \r\n\r\n                {\r\n                    userId: \"1\",\r\n                    userName: \"John\",\r\n                    userImage: \"https://picsum.photos/200\"\r\n                }\r\n            ]\r\n        });\r\n\r\n        // API.getUsers()\r\n        //     .then(res =>\r\n        //         this.setState({\r\n        //             users: res.data\r\n        //         })\r\n        //     )\r\n        //     .catch((err) =>\r\n        //         console.log(err),\r\n        //         this.setState({\r\n        //             message: \"No users found.\",\r\n        //             users: [],\r\n        //         }),\r\n        //     )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n\r\n                <form className=\"form-inline my-2 my-lg-0 searchUserForm\">\r\n                    <input className=\"form-control searchUserInput\"\r\n                        type=\"search\"\r\n                        placeholder=\"Search for user\"\r\n                        aria-label=\"Search\"\r\n                        id=\"userInput\"\r\n                        value={this.state.userSearch}\r\n                        onChange={this.handleInputChange}\r\n                        name=\"userSearch\"\r\n                        autoComplete=\"off\"\r\n                        required\r\n                    />\r\n                </form>\r\n\r\n                {this.state.users.length ? (\r\n                    <List>\r\n                        {this.state.users.map(user => (\r\n                            <User\r\n                                userId={user.id}\r\n                                userName={user.userName}\r\n                                userImage={user.userImage}\r\n                                handler={null}\r\n                            />\r\n                        ))}\r\n                    </List>\r\n                ) : (\r\n                    <h2>{this.state.message}</h2>\r\n                )}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSearch;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n// import Container from \"./components/Container/container\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport PodcastSearch from \"./components/PodcastSearch/podcastSearch\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport EpisodeList from \"./pages/EpisodeList\";\nimport Listen from \"./pages/Listen\";\nimport UserSearch from \"./pages/UserSearch\";\nimport API from \"./utils/API\"\nimport \"./App.css\";\n// import Login from './pages/Login';\n\nclass App extends Component {\n\n  state = {\n    podcastSearch: \"\",\n    podcasts: [],\n    showPodcasts: \"hidePodcasts\",\n    redirect: false,\n  };\n\n  // Listen for when user enters text into Podcast search fields\n  handleInputChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    }, () => {\n      let timer;\n      clearTimeout(timer);\n      timer = setTimeout(() => this.checkContent(), 500);\n    });\n  };\n\n  // Check if Podcast Search input has text and show/hide\n  checkContent = () => {\n\n    // Show Podcast search results\n    if (this.state.podcastSearch !== \"\") {\n      this.setState({\n        showPodcasts: \"showPodcasts\"\n      });\n\n      this.getPodcasts();\n    }\n    else if (this.state.podcastSearch === \"\") {\n      this.setState({\n        showPodcasts: \"hidePodcasts\"\n      });\n    }\n  }\n\n  // Search for podcasts by calling API\n  getPodcasts = () => {\n    API.getPodcasts(this.state.podcastSearch)\n      .then(res => {\n        this.setState({\n          podcasts: res.data.results\n        })\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          podcasts: [],\n          message: \"We couldn't find a match.\"\n        })\n      });\n  };\n\n  // Passed to children as prop\n  // Hides podcast search results\n  hidePodcasts = () => {\n    this.setState({\n      showPodcasts: \"hidePodcasts\"\n    });\n  }\n\n  logout = () => {\n    sessionStorage.clear();\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect)\n\n      return (\n      \n          <Switch>\n            <Redirect to={'/'} />\n          </Switch>\n        \n      )\n\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          <Navbar\n            podcastSearch={this.podcastSearch}\n            handleInputChange={this.handleInputChange}\n            logout={this.logout}\n          />\n      \n         <PodcastSearch\n            show={this.state.showPodcasts}\n            hide={this.hidePodcasts}\n            podcasts={this.state.podcasts}\n          />  \n      \n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/episodeList\" component={EpisodeList} />\n          <Route exact path=\"/listen\" component={Listen} />\n          <Route exact path=\"/userSearch\" component={UserSearch} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\n// import Row from \"../components/Row/row\";\n// import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport \"./Login.css\";\n// import ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Login extends Component {\n\n    state = {\n        id_token: \"\",\n        redirect: false,\n    };\n\n\n    getOrCreateUser = () => {\n        API.getOrCreateUser(this.state.id_token)\n            .then(res => {\n                sessionStorage.setItem(\"id\", res.data.id);\n                sessionStorage.setItem(\"name\", res.data.name);\n                sessionStorage.setItem(\"email\", res.data.email);\n                sessionStorage.setItem(\"googleId\", res.data.googleId);\n                sessionStorage.setItem(\"profileImage\", res.data.profileImage)      \n            }\n        )\n        this.setState({\n            redirect: true,\n        })\n    };\n\n//\n    render() {\n\n        if (this.state.redirect || sessionStorage.getItem(\"id\")) {\n            return (<Redirect to={'/home'} />)\n        }\n\n        const responseGoogle = (response) => {\n            console.log(response);\n            this.setState({\n                id_token: response.tokenObj.id_token,\n            });\n\n            this.getOrCreateUser();\n        }\n\n        return (\n\n            <Container>\n                <div className=\"header\">\n                    <div className=\"googleSignIn\">\n                        <GoogleLogin\n                            clientId=\"940323765774-bpnsf77f8vksurn7gbv082gatubu97kl.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            onSuccess={responseGoogle}\n                            onFailure={responseGoogle} />\n                    </div>\n                    <br></br><br></br>\n                    <h1 id=\"loginPageTitle\" className=\"text-center\">Welcome to PodHub!</h1>\n                    <h4 id=\"slogan\" className=\"text-center\">Share what you care about!</h4>\n                </div>\n            </Container>\n\n        )\n    }\n}\n\nexport default Login; \n","import React from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n\n\nconst textStyle = {\n  left: \"25%\",\n  right: \"25%\",\n  width: \"50%\",\n  position: \"relative\",\n};\n\nfunction Error() {\n  return (\n    <div>\n      <Container>\n        <Row>\n          <h1 className=\"text-center\" style={textStyle}>\n            404 Page Not Found\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n              🙄\n              </span>\n          </h1>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Error;\n","import React, { Component } from 'react';\nimport App from \"./App\";\nimport Login from './pages/Login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n//import Container from \"./components/Container/container\";\n//import { Redirect } from 'react-router-dom';\nimport Error from \"./pages/Error\";\nclass Application extends Component {\n\n\n\n  render() {\n    return (\n      <Router>\n       \n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"*\" component={App} />\n          <Route component= {Error} />\n\n        </Switch>\n      \n      </Router>\n    )\n\n  }\n}\n\nexport default Application;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './Application';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}